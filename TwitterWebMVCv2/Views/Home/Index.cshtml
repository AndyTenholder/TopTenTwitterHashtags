@model TwitterWebMVCv2.ViewModels.HomeViewModel
@{
    ViewData["Title"] = "Top 10 #s";
}

<h1>
    The Top 10
    @*SVG Twitter bird image*@
    <svg viewbox="0 0 2000 1625.36"
         width="43"
         height="35"
         version="1.1"
         xmlns="http://www.w3.org/2000/svg">
        <path d="m 1999.9999,192.4 c -73.58,32.64 -152.67,54.69 -235.66,64.61 84.7,-50.78 149.77,-131.19 180.41,-227.01 -79.29,47.03 -167.1,81.17 -260.57,99.57 C 1609.3399,49.82 1502.6999,0 1384.6799,0 c -226.6,0 -410.328,183.71 -410.328,410.31 0,32.16 3.628,63.48 10.625,93.51 -341.016,-17.11 -643.368,-180.47 -845.739,-428.72 -35.324,60.6 -55.5583,131.09 -55.5583,206.29 0,142.36 72.4373,267.95 182.5433,341.53 -67.262,-2.13 -130.535,-20.59 -185.8519,-51.32 -0.039,1.71 -0.039,3.42 -0.039,5.16 0,198.803 141.441,364.635 329.145,402.342 -34.426,9.375 -70.676,14.395 -108.098,14.395 -26.441,0 -52.145,-2.578 -77.203,-7.364 52.215,163.008 203.75,281.649 383.304,284.946 -140.429,110.062 -317.351,175.66 -509.5972,175.66 -33.1211,0 -65.7851,-1.949 -97.8828,-5.738 181.586,116.4176 397.27,184.359 628.988,184.359 754.732,0 1167.462,-625.238 1167.462,-1167.47 0,-17.79 -0.41,-35.48 -1.2,-53.08 80.1799,-57.86 149.7399,-130.12 204.7499,-212.41"
              style="fill:#00aced" />
    </svg>
    #Hashtags!
</h1>
<button id="getHourData">Hour</button>
<button id="getDayData">Day</button>
<button id="getWeekData">Week</button>

<table>
    <tr>
        <td>
            <ol>
                @for (int i = 0; i < 10; i++)
                {
                    <li><p>@Model.HourHashtagCounts[i].Hashtag.Name - @Model.HourHashtagCounts[i].TimesUsed</p></li>
                }
            </ol>
        </td>
    </tr>
</table>

@*Tweets Each Hour Line Graph Datasets*@
@{

    List<int> hashtag0DataList = new List<int>();
    List<int> hashtag1DataList = new List<int>();
    List<int> hashtag2DataList = new List<int>();
    List<int> hashtag3DataList = new List<int>();
    List<int> hashtag4DataList = new List<int>();
    List<int> hashtag5DataList = new List<int>();
    List<int> hashtag6DataList = new List<int>();
    List<int> hashtag7DataList = new List<int>();
    List<int> hashtag8DataList = new List<int>();
    List<int> hashtag9DataList = new List<int>();

    for (int i = 0; i < 12; i++)
    {
        hashtag0DataList.Add(Model.HourHashtagCounts[0].TweetsPer[i]);
        hashtag1DataList.Add(Model.HourHashtagCounts[1].TweetsPer[i]);
        hashtag2DataList.Add(Model.HourHashtagCounts[2].TweetsPer[i]);
        hashtag3DataList.Add(Model.HourHashtagCounts[3].TweetsPer[i]);
        hashtag4DataList.Add(Model.HourHashtagCounts[4].TweetsPer[i]);
        hashtag5DataList.Add(Model.HourHashtagCounts[5].TweetsPer[i]);
        hashtag6DataList.Add(Model.HourHashtagCounts[6].TweetsPer[i]);
        hashtag7DataList.Add(Model.HourHashtagCounts[7].TweetsPer[i]);
        hashtag8DataList.Add(Model.HourHashtagCounts[8].TweetsPer[i]);
        hashtag9DataList.Add(Model.HourHashtagCounts[9].TweetsPer[i]);
    }
}
@*graphs made using the Charts.js Lib http://www.chartjs.org/*@
<canvas id="TweetsPerHourChart"></canvas>
@{
    for (int i = 0; i < 10; i++)
    {
        <button id="button @i">@Model.HourHashtagCounts[i].Hashtag.Name.ToString()</button>
    }
}


<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.bundle.min.js"></script>
<script>
    var hashtag0DataListJSON =  @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(hashtag0DataList));
    var hashtag1DataListJSON =  @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(hashtag1DataList));
    var hashtag2DataListJSON =  @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(hashtag2DataList));
    var hashtag3DataListJSON =  @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(hashtag3DataList));
    var hashtag4DataListJSON =  @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(hashtag4DataList));
    var hashtag5DataListJSON =  @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(hashtag5DataList));
    var hashtag6DataListJSON =  @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(hashtag6DataList));
    var hashtag7DataListJSON =  @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(hashtag7DataList));
    var hashtag8DataListJSON =  @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(hashtag8DataList));
    var hashtag9DataListJSON =  @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(hashtag9DataList));

    var button0IsOn = true;
    var button1IsOn = true;
    var button2IsOn = false;
    var button3IsOn = false;
    var button4IsOn = false;
    var button5IsOn = false;
    var button6IsOn = false;
    var button7IsOn = false;
    var button8IsOn = false;
    var button9IsOn = false;

    var MINUTES = ["5", "10", "15", "20", "25", "30", "35", "40", "45", "50", "55", "60"];
    var HOURS = ["12am", "1am", "2am", "3am", "4am", "5am", "6am", "7am", "9am", "10am", "11am", "12pm", "1pm", "2pm", "3pm", "4pm", "5pm", "6pm", "7pm", "8pm", "9pm", "10pm", "11pm"];
    var DAYS = ["1", "2", "3", "4", "5", "6", "7"];

    var TweetsPerHourChart = {
        type: 'line',
        data: {
            labels: MINUTES,
            datasets: [{
                label: '@Model.HourHashtagCounts[0].Hashtag.Name.ToString()',
                backgroundColor: "#0074D9",
                borderColor: "#0074D9",
                data: hashtag0DataListJSON,
                fill: false
            },{
                label: '@Model.HourHashtagCounts[1].Hashtag.Name.ToString()',
                backgroundColor: "#7FDBFF",
                borderColor: "#7FDBFF",
                data: hashtag1DataListJSON,
                fill: false
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    display: true,
                    scaleLabel: {
                        display: true,
                        labelString: "Tweets"
                    }
                }]
            },
            @*tooltips and hover cause label to appear at data point the cursor is closest to*@
            tooltips: {
                mode: 'index',
                intersect: false
            },
            hover: {
                mode: "nearest",
                intersect: true
            },
            responsive: true,
            maintainAspectRatio: true
        }
    };

    window.onload = function () {
        var ctx = document.getElementById("TweetsPerHourChart").getContext("2d");
        window.myLine = new Chart(ctx, TweetsPerHourChart);
    };

    document.getElementById("button 0").addEventListener("click", function () {
        if (button0IsOn) {
            var dataSet = {
                label: "@Model.HourHashtagCounts[0].Hashtag.Name.ToString()",
                backgroundColor: "#0074D9",
                borderColor: "#0074D9",
                data: hashtag0DataListJSON,
                fill: false
            };
             var searchTerm = "@Model.HourHashtagCounts[0].Hashtag.Name.ToString()",
                pos = -1;
            for (var i = 0, len = TweetsPerHourChart.data.datasets.length; i < len; i++) {
                if (TweetsPerHourChart.data.datasets[i].label === searchTerm) {
                    pos = i;
                    break;
                }
            }
            TweetsPerHourChart.data.datasets.splice(pos, 1);
            button0IsOn = false;
            window.myLine.update();

        } else {

            var newDataset = {
                label: "@Model.HourHashtagCounts[0].Hashtag.Name.ToString()",
                backgroundColor: "#0074D9",
                borderColor: "#0074D9",
                data: hashtag0DataListJSON,
                fill: false
            };
            TweetsPerHourChart.data.datasets.push(newDataset);
            button0IsOn = true;
            window.myLine.update();
        };
    });

     document.getElementById("button 1").addEventListener("click", function () {
        if (button1IsOn) {
            var dataSet = {
                label: "@Model.HourHashtagCounts[1].Hashtag.Name.ToString()",
                backgroundColor: "#7FDBFF",
                borderColor: "#7FDBFF",
                data: hashtag1DataListJSON,
                fill: false
            };
            var searchTerm = "@Model.HourHashtagCounts[1].Hashtag.Name.ToString()",
                pos = -1;
            for (var i = 0, len = TweetsPerHourChart.data.datasets.length; i < len; i++) {
                if (TweetsPerHourChart.data.datasets[i].label === searchTerm) {
                    pos = i;
                    break;
                }
            }
            TweetsPerHourChart.data.datasets.splice(pos, 1);
            button1IsOn = false;
            window.myLine.update();

        } else {

            var newDataset = {
                label: "@Model.HourHashtagCounts[1].Hashtag.Name.ToString()",
                backgroundColor: "#7FDBFF",
                borderColor: "#7FDBFF",
                data: hashtag1DataListJSON,
                fill: false
            };
            TweetsPerHourChart.data.datasets.push(newDataset);
            button1IsOn = true;
            window.myLine.update();
        };
    });
    document.getElementById("button 2").addEventListener("click", function () {
        if (button2IsOn) {
            var dataSet = {
                label: "@Model.HourHashtagCounts[2].Hashtag.Name.ToString()",
                backgroundColor: "#39CCCC",
                borderColor: "#39CCCC",
                data: hashtag2DataListJSON,
                fill: false
            };
            var searchTerm = "@Model.HourHashtagCounts[2].Hashtag.Name.ToString()",
                pos = -1;
            for (var i = 0, len = TweetsPerHourChart.data.datasets.length; i < len; i++) {
                if (TweetsPerHourChart.data.datasets[i].label === searchTerm) {
                    pos = i;
                    break;
                }
            }
            TweetsPerHourChart.data.datasets.splice(pos, 1);
            button2IsOn = false;
            window.myLine.update();

        } else {

            var newDataset = {
                label: "@Model.HourHashtagCounts[2].Hashtag.Name.ToString()",
                backgroundColor: "#39CCCC",
                borderColor: "#39CCCC",
                data: hashtag2DataListJSON,
                fill: false
            };
            TweetsPerHourChart.data.datasets.push(newDataset);
            button2IsOn = true;
            window.myLine.update();
        };
     });

    document.getElementById("button 3").addEventListener("click", function () {
        if (button3IsOn) {
            var dataSet = {
                label: "@Model.HourHashtagCounts[3].Hashtag.Name.ToString()",
                backgroundColor: "#3D9970",
                borderColor: "#3D9970",
                data: hashtag3DataListJSON,
                fill: false
            };
            var searchTerm = "@Model.HourHashtagCounts[3].Hashtag.Name.ToString()",
                pos = -1;
            for (var i = 0, len = TweetsPerHourChart.data.datasets.length; i < len; i++) {
                if (TweetsPerHourChart.data.datasets[i].label === searchTerm) {
                    pos = i;
                    break;
                }
            }
            TweetsPerHourChart.data.datasets.splice(pos, 1);
            button3IsOn = false;
            window.myLine.update();

        } else {

            var newDataset = {
                label: "@Model.HourHashtagCounts[3].Hashtag.Name.ToString()",
                backgroundColor: "#3D9970",
                borderColor: "#3D9970",
                data: hashtag3DataListJSON,
                fill: false
            };
            TweetsPerHourChart.data.datasets.push(newDataset);
            button3IsOn = true;
            window.myLine.update();
        };
    });

    document.getElementById("button 4").addEventListener("click", function () {
        if (button4IsOn) {
            var dataSet = {
                label: "@Model.HourHashtagCounts[4].Hashtag.Name.ToString()",
                backgroundColor: "#2ECC40",
                borderColor: "#2ECC40",
                data: hashtag4DataListJSON,
                fill: false
            };
            var searchTerm = "@Model.HourHashtagCounts[4].Hashtag.Name.ToString()",
                pos = -1;
            for (var i = 0, len = TweetsPerHourChart.data.datasets.length; i < len; i++) {
                if (TweetsPerHourChart.data.datasets[i].label === searchTerm) {
                    pos = i;
                    break;
                }
            }
            TweetsPerHourChart.data.datasets.splice(pos, 1);
            button4IsOn = false;
            window.myLine.update();

        } else {

            var newDataset = {
                label: "@Model.HourHashtagCounts[4].Hashtag.Name.ToString()",
                backgroundColor: "#2ECC40",
                borderColor: "#2ECC40",
                data: hashtag4DataListJSON,
                fill: false
            };
            TweetsPerHourChart.data.datasets.push(newDataset);
            button4IsOn = true;
            window.myLine.update();
        };
    });

    document.getElementById("button 5").addEventListener("click", function () {
        if (button5IsOn) {
            var dataSet = {
                label: "@Model.HourHashtagCounts[5].Hashtag.Name.ToString()",
                backgroundColor: "#FFDC00",
                borderColor: "#FFDC00",
                data: hashtag5DataListJSON,
                fill: false
            };
            var searchTerm = "@Model.HourHashtagCounts[5].Hashtag.Name.ToString()",
                pos = -1;
            for (var i = 0, len = TweetsPerHourChart.data.datasets.length; i < len; i++) {
                if (TweetsPerHourChart.data.datasets[i].label === searchTerm) {
                    pos = i;
                    break;
                }
            }
            TweetsPerHourChart.data.datasets.splice(pos, 1);
            button5IsOn = false;
            window.myLine.update();

        } else {

            var newDataset = {
                label: "@Model.HourHashtagCounts[5].Hashtag.Name.ToString()",
                backgroundColor: "#FFDC00",
                borderColor: "#FFDC00",
                data: hashtag5DataListJSON,
                fill: false
            };
            TweetsPerHourChart.data.datasets.push(newDataset);
            button5IsOn = true;
            window.myLine.update();
        };
    });

    document.getElementById("button 6").addEventListener("click", function () {
        if (button6IsOn) {
            var dataSet = {
                label: "@Model.HourHashtagCounts[6].Hashtag.Name.ToString()",
                backgroundColor: "#FF851B",
                borderColor: "#FF851B",
                data: hashtag6DataListJSON,
                fill: false
            };
            var searchTerm = "@Model.HourHashtagCounts[6].Hashtag.Name.ToString()",
                pos = -1;
            for (var i = 0, len = TweetsPerHourChart.data.datasets.length; i < len; i++) {
                if (TweetsPerHourChart.data.datasets[i].label === searchTerm) {
                    pos = i;
                    break;
                }
            }
            TweetsPerHourChart.data.datasets.splice(pos, 1);
            button6IsOn = false;
            window.myLine.update();

        } else {

            var newDataset = {
                label: "@Model.HourHashtagCounts[6].Hashtag.Name.ToString()",
                backgroundColor: "#FF851B",
                borderColor: "#FF851B",
                data: hashtag6DataListJSON,
                fill: false
            };
            TweetsPerHourChart.data.datasets.push(newDataset);
            button6IsOn = true;
            window.myLine.update();
        };
    });

    document.getElementById("button 7").addEventListener("click", function () {
        if (button7IsOn) {
            var dataSet = {
                label: "@Model.HourHashtagCounts[7].Hashtag.Name.ToString()",
                backgroundColor: "#FF4136",
                borderColor: "#FF4136",
                data: hashtag7DataListJSON,
                fill: false
            };
            var searchTerm = "@Model.HourHashtagCounts[7].Hashtag.Name.ToString()",
                pos = -1;
            for (var i = 0, len = TweetsPerHourChart.data.datasets.length; i < len; i++) {
                if (TweetsPerHourChart.data.datasets[i].label === searchTerm) {
                    pos = i;
                    break;
                }
            }
            TweetsPerHourChart.data.datasets.splice(pos, 1);
            button7IsOn = false;
            window.myLine.update();

        } else {

            var newDataset = {
                label: "@Model.HourHashtagCounts[7].Hashtag.Name.ToString()",
                backgroundColor: "#FF4136",
                borderColor: "#FF4136",
                data: hashtag7DataListJSON,
                fill: false
            };
            TweetsPerHourChart.data.datasets.push(newDataset);
            button7IsOn = true;
            window.myLine.update();
        };
    });

    document.getElementById("button 8").addEventListener("click", function () {
        if (button8IsOn) {
            var dataSet = {
                label: "@Model.HourHashtagCounts[8].Hashtag.Name.ToString()",
                backgroundColor: "#85144b",
                borderColor: "#85144b",
                data: hashtag8DataListJSON,
                fill: false
            };
            var searchTerm = "@Model.HourHashtagCounts[8].Hashtag.Name.ToString()",
                pos = -1;
            for (var i = 0, len = TweetsPerHourChart.data.datasets.length; i < len; i++) {
                if (TweetsPerHourChart.data.datasets[i].label === searchTerm) {
                    pos = i;
                    break;
                }
            }
            TweetsPerHourChart.data.datasets.splice(pos, 1);
            button8IsOn = false;
            window.myLine.update();

        } else {

            var newDataset = {
                label: "@Model.HourHashtagCounts[8].Hashtag.Name.ToString()",
                backgroundColor: "#85144b",
                borderColor: "#85144b",
                data: hashtag8DataListJSON,
                fill: false
            };
            TweetsPerHourChart.data.datasets.push(newDataset);
            button8IsOn = true;
            window.myLine.update();
        };
    });

    document.getElementById("button 9").addEventListener("click", function () {
        if (button9IsOn) {
            var dataSet = {
                label: "@Model.HourHashtagCounts[9].Hashtag.Name.ToString()",
                backgroundColor: "#B10DC9",
                borderColor: "#B10DC9",
                data: hashtag9DataListJSON,
                fill: false
            };
            var searchTerm = "@Model.HourHashtagCounts[9].Hashtag.Name.ToString()",
                pos = -1;
            for (var i = 0, len = TweetsPerHourChart.data.datasets.length; i < len; i++) {
                if (TweetsPerHourChart.data.datasets[i].label === searchTerm) {
                    pos = i;
                    break;
                }
            }
            TweetsPerHourChart.data.datasets.splice(pos, 1);
            button9IsOn = false;
            window.myLine.update();

        } else {

            var newDataset = {
                label: "@Model.HourHashtagCounts[9].Hashtag.Name.ToString()",
                backgroundColor: "#B10DC9",
                borderColor: "#B10DC9",
                data: hashtag9DataListJSON,
                fill: false
            };
            TweetsPerHourChart.data.datasets.push(newDataset);
            button9IsOn = true;
            window.myLine.update();
        };
    });
</script>